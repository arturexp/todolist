from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, String, Date
from datetime import datetime
from sqlalchemy.orm import sessionmaker

engine = create_engine('sqlite:///todo.db?check_same_thread=False')

Base = declarative_base()
Session = sessionmaker(bind=engine)


class task(Base):
    __tablename__ = 'task'
    id = Column(Integer, primary_key=True)
    task = Column(String)
    deadline = Column(Date, default=datetime.today())

    def __repr__(self):
        return self.task


Base.metadata.create_all(engine)


def add_task():
    user_task = input('Enter task\n')
    session = Session()
    new_task = task(task=user_task, deadline=datetime.today())
    session.add(new_task)
    session.commit()
    print('The task has been added!\n')


def task_to_do():
    session = Session()
    rows = session.query(task).all()
    if len(rows) == 0:
        print('Nothing to do!\n')
    else:
        print('Today:')
        for i in range(len(rows)):
            print(str(i+1)+'.', rows[i])
        print()


while True:
    print("1) Today's tasks")
    print("2) Add task")
    print("0) Exit")
    user_choice = int(input())
    if user_choice == 1:
        task_to_do()
    elif user_choice == 2:
        add_task()
    elif user_choice == 0:
        print('\nBye!')
        break
